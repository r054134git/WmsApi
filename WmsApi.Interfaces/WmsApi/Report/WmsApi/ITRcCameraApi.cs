//<auto-generated />

using System;
using System.Threading.Tasks;
using Refit;
using WmsApi;
using WmsApi.Contracts.Models;

namespace WmsApi.Report.WmsApi
{
    public partial interface ITRcCameraApi
    {
        [Get("/report/TRcCamera/GetCameraRecord")]
        Task<PageResult<TRcCameraIdsReadModel>> GetCameraRecord(string bayName = null, DateTime? dtStart = null, DateTime? dtEnd = null);

        [Post("/report/TRcCamera/Create")]
        Task<OperationResult> Create([Body] TRcCameraIdsCreateModel createModel);

        [Put("/report/TRcCamera/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TRcCameraIdsUpdateModel updateModel);

        [Delete("/report/TRcCamera/Delete")]
        Task<OperationResult> Delete(string[] ids = null);

        [Get("/report/TRcCamera/Get/{id}")]
        Task<TRcCameraIdsReadModel> Get(string id);

        [Get("/report/TRcCamera/GetPage")]
        Task<PageResult<TRcCameraIdsReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/report/TRcCamera/GetPageByString")]
        Task<PageResult<TRcCameraIdsReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/report/TRcCamera/GetListByString")]
        Task<PageResult<TRcCameraIdsReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/report/TRcCamera/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/report/TRcCamera/GetList")]
        Task<PageResult<TRcCameraIdsReadModel>> GetList();
    }
}