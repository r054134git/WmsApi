//<auto-generated />

using System.Threading.Tasks;
using Refit;
using WmsApi;
using WmsApi.Contracts.Models;

namespace WmsApi.Report.WmsApi
{
    public interface ITRcBayTransfersApi
    {
        /// <summary>
        /// 生成倒运报表
        /// </summary>
        /// <returns></returns>
        [Get("/report/TRcBayTransfers/ReportExcel")]
        Task ReportExcel();

        /// <summary>
        /// 生成0点库存报表
        /// </summary>
        /// <returns></returns>
        [Get("/report/TRcBayTransfers/MaterialReportExcel")]
        Task MaterialReportExcel();

        [Post("/report/TRcBayTransfers/Create")]
        Task<OperationResult> Create([Body] TPlBayTransferCreateModel createModel);

        [Put("/report/TRcBayTransfers/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TPlBayTransferUpdateModel updateModel);

        [Delete("/report/TRcBayTransfers/Delete")]
        Task<OperationResult> Delete([Query] string[] ids = null);

        [Get("/report/TRcBayTransfers/Get/{id}")]
        Task<TPlBayTransferReadModel> Get(string id);

        [Get("/report/TRcBayTransfers/GetPage")]
        Task<PageResult<TPlBayTransferReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/report/TRcBayTransfers/GetPageByString")]
        Task<PageResult<TPlBayTransferReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/report/TRcBayTransfers/GetListByString")]
        Task<PageResult<TPlBayTransferReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/report/TRcBayTransfers/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/report/TRcBayTransfers/GetList")]
        Task<PageResult<TPlBayTransferReadModel>> GetList();
    }
}