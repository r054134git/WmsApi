//<auto-generated />

using System.Threading.Tasks;
using Refit;
using WmsApi;
using WmsApi.Contracts.Models;

namespace WmsApi.Report.WmsApi
{
    public partial interface ITRcLocationMaterialApi
    {
        [Get("/report/TRcLocationMaterial/GetShiftList")]
        Task<PageResult<ShiftModel>> GetShiftList(string[] time = null);

        [Get("/report/TRcLocationMaterial/GetMatSumList")]
        Task<PageResult<TRcLocationMaterialReadModel>> GetMatSumList(int? current = null, int? pageSize = null, string bayid = null, string[] time = null);

        [Get("/report/TRcLocationMaterial/GetLockMatSumList")]
        Task<PageResult<TRcLocationMaterialReadModel>> GetLockMatSumList(int? current = null, int? pageSize = null, string bayid = null, string[] time = null);

        [Get("/report/TRcLocationMaterial/GetCmdMatSumList")]
        Task<PageResult<TRcLocationMaterialReadModel>> GetCmdMatSumList(int? current = null, int? pageSize = null, string bayid = null, string[] time = null);

        [Get("/report/TRcLocationMaterial/CreateMatReportExcel")]
        Task CreateMatReportExcel(string time = null, string end = null, string type = null, string reportName = null);

        [Get("/report/TRcLocationMaterial/GetDiverList")]
        Task<PageResult<ShiftModel>> GetDiverList(string[] time = null);

        [Get("/report/TRcLocationMaterial/CreateDiverReportExcel")]
        Task CreateDiverReportExcel(string time = null, string end = null, string reportName = null);

        [Post("/report/TRcLocationMaterial/Create")]
        Task<OperationResult> Create([Body] TRcLocationMaterialCreateModel createModel);

        [Put("/report/TRcLocationMaterial/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TRcLocationMaterialUpdateModel updateModel);

        [Delete("/report/TRcLocationMaterial/Delete")]
        Task<OperationResult> Delete(string[] ids = null);

        [Get("/report/TRcLocationMaterial/Get/{id}")]
        Task<TRcLocationMaterialReadModel> Get(string id);

        [Get("/report/TRcLocationMaterial/GetPage")]
        Task<PageResult<TRcLocationMaterialReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/report/TRcLocationMaterial/GetPageByString")]
        Task<PageResult<TRcLocationMaterialReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/report/TRcLocationMaterial/GetListByString")]
        Task<PageResult<TRcLocationMaterialReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/report/TRcLocationMaterial/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/report/TRcLocationMaterial/GetList")]
        Task<PageResult<TRcLocationMaterialReadModel>> GetList();
    }
}