//<auto-generated />

using System;
using System.Threading.Tasks;
using Refit;
using WmsApi;
using WmsApi.Contracts.Models;

namespace WmsApi.Report.WmsApi
{
    public partial interface ITRcWorkModeApi
    {
        [Get("/report/TRcWorkMode/GetWorkModeList")]
        Task<PageResult<WorkModel>> GetWorkModeList(DateTime[] time = null);

        [Post("/report/TRcWorkMode/Create")]
        Task<OperationResult> Create([Body] TRcWorkModeCreateModel createModel);

        [Put("/report/TRcWorkMode/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TRcWorkModeUpdateModel updateModel);

        [Delete("/report/TRcWorkMode/Delete")]
        Task<OperationResult> Delete(string[] ids = null);

        [Get("/report/TRcWorkMode/Get/{id}")]
        Task<TRcWorkModeReadModel> Get(string id);

        [Get("/report/TRcWorkMode/GetPage")]
        Task<PageResult<TRcWorkModeReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/report/TRcWorkMode/GetPageByString")]
        Task<PageResult<TRcWorkModeReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/report/TRcWorkMode/GetListByString")]
        Task<PageResult<TRcWorkModeReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/report/TRcWorkMode/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/report/TRcWorkMode/GetList")]
        Task<PageResult<TRcWorkModeReadModel>> GetList();
    }
}