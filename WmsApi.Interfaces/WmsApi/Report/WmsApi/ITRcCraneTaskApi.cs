//<auto-generated />

using System.Threading.Tasks;
using Refit;
using WmsApi;
using WmsApi.Contracts.Models;

namespace WmsApi.Report.WmsApi
{
    public partial interface ITRcCraneTaskApi
    {
        [Get("/report/TRcCraneTask/GetCranePercent")]
        Task<PageResult<CraneModel>> GetCranePercent(int? current = null, int? pageSize = null, string[] bayId = null, string[] time = null);

        [Post("/report/TRcCraneTask/Create")]
        Task<OperationResult> Create([Body] TRcCraneTaskCreateModel createModel);

        [Put("/report/TRcCraneTask/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TRcCraneTaskUpdateModel updateModel);

        [Delete("/report/TRcCraneTask/Delete")]
        Task<OperationResult> Delete(string[] ids = null);

        [Get("/report/TRcCraneTask/Get/{id}")]
        Task<TRcCraneTaskReadModel> Get(string id);

        [Get("/report/TRcCraneTask/GetPage")]
        Task<PageResult<TRcCraneTaskReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/report/TRcCraneTask/GetPageByString")]
        Task<PageResult<TRcCraneTaskReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/report/TRcCraneTask/GetListByString")]
        Task<PageResult<TRcCraneTaskReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/report/TRcCraneTask/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/report/TRcCraneTask/GetList")]
        Task<PageResult<TRcCraneTaskReadModel>> GetList();
    }
}