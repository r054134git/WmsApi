//<auto-generated />

using System.Threading.Tasks;
using Refit;
using WmsApi;
using WmsApi.Contracts.Models;

namespace WmsApi.Report.WmsApi
{
    public interface ITRcLogApi
    {
        [Get("/report/TRcLog/GetPageBy20w")]
        Task<PageResult<TRcLogReadModel>> GetPageBy20w(int? current = null, int? pageSize = null, [Query] string[] time = null, string message = null);

        [Post("/report/TRcLog/CreateLog")]
        Task<OperationResult> CreateLog(string message = null);

        [Post("/report/TRcLog/Create")]
        Task<OperationResult> Create([Body] TRcLogCreateModel createModel);

        [Put("/report/TRcLog/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TRcLogUpdateModel updateModel);

        [Delete("/report/TRcLog/Delete")]
        Task<OperationResult> Delete([Query] string[] ids = null);

        [Get("/report/TRcLog/Get/{id}")]
        Task<TRcLogReadModel> Get(string id);

        [Get("/report/TRcLog/GetPage")]
        Task<PageResult<TRcLogReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/report/TRcLog/GetPageByString")]
        Task<PageResult<TRcLogReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/report/TRcLog/GetListByString")]
        Task<PageResult<TRcLogReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/report/TRcLog/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/report/TRcLog/GetList")]
        Task<PageResult<TRcLogReadModel>> GetList();
    }
}