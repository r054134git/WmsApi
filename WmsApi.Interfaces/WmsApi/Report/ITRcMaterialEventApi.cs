//<auto-generated />

using System;
using System.Threading.Tasks;
using Refit;
using WmsApi;
using WmsApi.Contracts.Models;

namespace WmsApi.Report
{
    public interface ITRcMaterialEventApi
    {
        [Get("/report/TRcMaterialEvent/GetPageByStringQ")]
        Task<PageResult<TRcMaterialEventReadModel>> GetPageByStringQ(int? current = null, int? pageSize = null, string materialNo = null, [Query] string[] operationType = null, string fromLocationName = null, string toLocationName = null);

        [Get("/report/TRcMaterialEvent/GetPageByStringQExcel")]
        Task GetPageByStringQExcel(string materialNo = null, [Query] string[] operationType = null, string fromLocationName = null, string toLocationName = null, string reportName = null);

        [Get("/report/TRcMaterialEvent/GetPageByStringBayCode")]
        Task<PageResult<TRcMaterialEventReadModel>> GetPageByStringBayCode(int? current = null, int? pageSize = null, [Query] string[] time = null, [Query] string[] bayCode = null, string materialNo = null, [Query] string[] operationType = null, [Query] string[] contentType = null);

        [Get("/report/TRcMaterialEvent/GetPageByStringBayCodeCommon")]
        Task<PageResult<TRcMaterialEventReadModel>> GetPageByStringBayCodeCommon([Query] string[] time = null, [Query] string[] bayCode = null, string materialNo = null, [Query] string[] operationType = null, [Query] string[] contentType = null);

        /// <summary>
        /// 自动手动下载
        /// </summary>
        /// <returns></returns>
        [Get("/report/TRcMaterialEvent/GetPageByStringBayCodeExcel")]
        Task GetPageByStringBayCodeExcel([Query] string[] time = null, [Query] string[] bayCode = null, string materialNo = null, [Query] string[] operationType = null, [Query] string[] contentType = null);

        /// <summary>
        /// 物料信息追溯
        /// </summary>
        /// <returns></returns>
        [Get("/report/TRcMaterialEvent/GetTracePageList")]
        Task<PageResult<TRcMaterialEventReadModel>> GetTracePageList(int? current = null, int? pageSize = null, string materialNo = null, [Query] string[] operationType = null, [Query] string[] contentType = null, [Query] DateTime[] dt = null);

        [Get("/report/TRcMaterialEvent/GetTraceReport")]
        Task GetTraceReport(string materialNo = null, [Query] string[] operationType = null, [Query] string[] contentType = null, [Query] DateTime[] dt = null, string reportName = null);

        /// <summary>
        /// 发货履历查询
        /// </summary>
        /// <returns></returns>
        [Get("/report/TRcMaterialEvent/GetDeliveryPageList")]
        Task<PageResult<TRcMaterialEventReadModel>> GetDeliveryPageList(int? current = null, int? pageSize = null, string materialNo = null, [Query] string[] operationType = null, [Query] DateTime[] dt = null);

        /// <summary>
        /// 发运的物料展示
        /// </summary>
        /// <returns></returns>
        [Get("/report/TRcMaterialEvent/GetOutMatList")]
        Task<PageResult<TRcMaterialEventReadModel>> GetOutMatList(int? current = null, int? pageSize = null, string bayid = null, [Query] string[] time = null);

        /// <summary>
        /// 生成物料相关报表
        /// </summary>
        /// <returns></returns>
        [Get("/report/TRcMaterialEvent/CreateOutMatReportExcel")]
        Task CreateOutMatReportExcel(string time = null, string end = null, string type = null, string reportName = null);

        [Get("/report/TRcMaterialEvent/CreateReportExcelDelivery")]
        Task CreateReportExcelDelivery(string materialNo = null, [Query] string[] operationType = null, [Query] DateTime[] dt = null, string reportName = null);

        /// <summary>
        /// 挑库履历查询
        /// </summary>
        /// <returns></returns>
        [Get("/report/TRcMaterialEvent/GetPrePickPageList")]
        Task<PageResult<TRcMaterialEventReadModel>> GetPrePickPageList(int? current = null, int? pageSize = null, string materialNo = null, string truckNo = null, string truckLoadingNo = null, [Query] DateTime[] dt = null);

        [Get("/report/TRcMaterialEvent/GetPrePickPageListExcel")]
        Task GetPrePickPageListExcel(string materialNo = null, string truckNo = null, string truckLoadingNo = null, [Query] DateTime[] dt = null, string reportName = null);

        [Post("/report/TRcMaterialEvent/Create")]
        Task<OperationResult> Create([Body] TRcMaterialEventCreateModel createModel);

        [Put("/report/TRcMaterialEvent/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TRcMaterialEventUpdateModel updateModel);

        [Delete("/report/TRcMaterialEvent/Delete")]
        Task<OperationResult> Delete([Query] string[] ids = null);

        [Get("/report/TRcMaterialEvent/Get/{id}")]
        Task<TRcMaterialEventReadModel> Get(string id);

        [Get("/report/TRcMaterialEvent/GetPage")]
        Task<PageResult<TRcMaterialEventReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/report/TRcMaterialEvent/GetPageByString")]
        Task<PageResult<TRcMaterialEventReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/report/TRcMaterialEvent/GetListByString")]
        Task<PageResult<TRcMaterialEventReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/report/TRcMaterialEvent/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/report/TRcMaterialEvent/GetList")]
        Task<PageResult<TRcMaterialEventReadModel>> GetList();

        [Get("/report/TRcMaterialEvent/GetListByLocation")]
        Task<PageResult<TRcMaterialEventReadModel>> GetListByLocation(string locationName);
    }
}