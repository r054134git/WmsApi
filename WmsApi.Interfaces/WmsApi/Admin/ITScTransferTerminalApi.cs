//<auto-generated />

using System.Collections.Generic;
using System.Threading.Tasks;
using Refit;
using WmsApi;
using WmsApi.Contracts.Models;

namespace WmsApi.Admin
{
    public partial interface ITScTransferTerminalApi
    {
        [Post("/admin/TScTransferTerminal/UpdateList")]
        Task<OperationResult> UpdateList(string[] ids = null, string cityName = null, int? operateType = null);

        [Delete("/admin/TScTransferTerminal/Delete")]
        Task<OperationResult> Delete(string[] ids = null);

        [Post("/admin/TScTransferTerminal/GetAllTransferSpecLeft")]
        Task<PageResult<TScTransferTerminalReadModel>> GetAllTransferSpecLeft(int? current = null, int? pageSize = null, string cityName = null, int? isEnable = null);

        [Post("/admin/TScTransferTerminal/GetAllTransferSpecRight")]
        Task<OperationResult<List<TScTransferTerminalReadModel>>> GetAllTransferSpecRight(string belongCityName = null);

        [Get("/admin/TScTransferTerminal/GetCodeName")]
        Task<TScTransferTerminalReadModel> GetCodeName(string code = null);

        [Post("/admin/TScTransferTerminal/UpdateListIsEnable")]
        Task<OperationResult> UpdateListIsEnable(string[] ids = null, int? isEnable = null);

        [Post("/admin/TScTransferTerminal/Create")]
        Task<OperationResult> Create([Body] TScTransferTerminalCreateModel createModel);

        [Put("/admin/TScTransferTerminal/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TScTransferTerminalUpdateModel updateModel);

        [Get("/admin/TScTransferTerminal/Get/{id}")]
        Task<TScTransferTerminalReadModel> Get(string id);

        [Get("/admin/TScTransferTerminal/GetPage")]
        Task<PageResult<TScTransferTerminalReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/admin/TScTransferTerminal/GetPageByString")]
        Task<PageResult<TScTransferTerminalReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/admin/TScTransferTerminal/GetListByString")]
        Task<PageResult<TScTransferTerminalReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/admin/TScTransferTerminal/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/admin/TScTransferTerminal/GetList")]
        Task<PageResult<TScTransferTerminalReadModel>> GetList();
    }
}