//<auto-generated />

using System.Collections.Generic;
using System.Threading.Tasks;
using Refit;
using WmsApi;
using WmsApi.Contracts;
using WmsApi.Contracts.Models;

namespace WmsApi.Tracker
{
    public interface ITTrLocationMaterialApi
    {
        /// <summary>
        /// 获取跨内的库位钢卷对应关系
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetLmMappingOfBay")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetLmMappingOfBay(string bayId = null);

        [Get("/tracker/TTrLocationMaterial/GetLmMappingOfBayWPF")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetLmMappingOfBayWPF(string bayId = null);

        /// <summary>
        /// 根据物料号请求MES卷信息
        /// </summary>
        /// <param name="materialNo"></param>
        /// <returns></returns>
        [Post("/tracker/TTrLocationMaterial/ReqMesMatInfo")]
        Task<OperationResult> ReqMesMatInfo(string materialNo = null);

        [Put("/tracker/TTrLocationMaterial/UpdateMaterialLock")]
        Task<OperationResult> UpdateMaterialLock(string id = null, string materialNo = null, int? lockMark = null, string lockReason = null);

        [Put("/tracker/TTrLocationMaterial/UpdateLocationLoad")]
        Task<OperationResult> UpdateLocationLoad(string locationName = null, int? isLoadEnable = null);

        [Post("/tracker/TTrLocationMaterial/CheckAreaLM")]
        Task<OperationResult> CheckAreaLM(string bayCode = null, decimal? minX = null, decimal? maxX = null);

        /// <summary>
        /// 客户端库存信息
        /// </summary>
        /// <param name="cancellationToken"></param>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetAllPageLMs")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetAllPageLMs();

        /// <summary>
        /// 客户端库存信息编辑
        /// </summary>
        /// <returns></returns>
        [Put("/tracker/TTrLocationMaterial/UpdateMaterialEdit")]
        Task<OperationResult> UpdateMaterialEdit(string id = null, string materialNo = null, int? type = null, int? isNot = null);

        /// <summary>
        /// 更改钢卷信息，库存状态
        /// </summary>
        [Put("/tracker/TTrLocationMaterial/UpdateMaterialState")]
        Task<TTrLocationMaterialReadModel> UpdateMaterialState(string locationId = null, string coilNo = null, PackTypes? packType = null, int? isHandlePack = null, string user = null);

        /// <summary>
        /// 盘库更改钢卷信息
        /// </summary>
        [Put("/tracker/TTrLocationMaterial/UpdateMaterial")]
        Task<OperationResult<TTrLocationMaterialReadModel>> UpdateMaterial(string locationId = null, string coilNo = null, int? defectType = null, string user = null);

        /// <summary>
        /// 获取库位/钢卷mapping
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetLocationMaterialByNo")]
        Task<TTrLocationMaterialReadModel> GetLocationMaterialByNo(string materialNo = null);

        /// <summary>
        /// 获取扫描信息
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetScanMaterial")]
        Task<TTrLocationMaterialReadModel> GetScanMaterial(string bayId = null, string materialNo = null);

        /// <summary>
        /// 扫码盘库更改库位信息
        /// </summary>
        [Put("/tracker/TTrLocationMaterial/UpdateScanLocation")]
        Task<TTrLocationMaterialReadModel> UpdateScanLocation(string locationName = null, string plan = null, string coilNo = null, string user = null);

        /// <summary>
        /// 查询鞍座信息
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetLocationDetail")]
        Task<TTrLocationMaterialReadModel> GetLocationDetail(string ownerid = null);

        [Get("/tracker/TTrLocationMaterial/GetLocation")]
        Task<List<TTrLocationMaterialReadModel>> GetLocation();

        [Get("/tracker/TTrLocationMaterial/GetListOfStack")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetListOfStack(string stackId = null);

        /// <summary>
        /// 库内各区域的库存统计
        /// </summary>
        [Get("/tracker/TTrLocationMaterial/GetStatOfAreas")]
        Task<List<AreaStatModel>> GetStatOfAreas(string bayId = null, string department = null);

        /// <summary>
        /// 获取报表信息
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetInventoryDetail")]
        Task<List<TTrLocationMaterialReadModel>> GetInventoryDetail(string planNo = null);

        /// <summary>
        /// 获取列信息
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetAllColumns")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetAllColumns(string bayId = null, string areaCode = null, int rowNo = 0);

        /// <summary>
        /// 获取行信息
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetAllRows")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetAllRows(string bayId = null, string areaCode = null, int? rowNo = null, int? storageType = null);

        /// <summary>
        /// 客户端包装线跟踪
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetChainQuery")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetChainQuery(int? current = null, int? pageSize = null, string key = null, string areaId = null);

        /// <summary>
        /// 客户端删除包装线物料号
        /// </summary>
        /// <returns></returns>
        [Post("/tracker/TTrLocationMaterial/DeleteChainCoil")]
        Task<int> DeleteChainCoil(string bayCode = null, string areaCode = null, int? colNo = null, string materialNo = null);

        /// <summary>
        /// 客户端添加包装线物料号
        /// </summary>
        /// <returns></returns>
        [Post("/tracker/TTrLocationMaterial/AddChainCoil")]
        Task<int> AddChainCoil(string bayCode = null, string areaCode = null, int? colNo = null, string materialNo = null);

        [Get("/tracker/TTrLocationMaterial/IsExist")]
        Task<OperationResult> IsExist(string material = null, string newLocation = null);

        /// <summary>
        /// 手持机上料
        /// </summary>
        /// <returns></returns>
        [Post("/tracker/TTrLocationMaterial/AddHoldChainCoil")]
        Task<OperationResult> AddHoldChainCoil(string locationId = null, string materialNo = null, string userName = null);

        /// <summary>
        /// 手持机下料
        /// </summary>
        /// <returns></returns>
        [Post("/tracker/TTrLocationMaterial/DeleteHoldChainCoil")]
        Task<OperationResult> DeleteHoldChainCoil(string locationId = null, string userName = null);

        /// <summary>
        /// 库存数据筛选
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetPageQuery")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetPageQuery(int? current = null, int? pageSize = null, [Query] int[] type = null, [Query] string[] bayId = null, [Query] string[] areaId = null, [Query] string[] stackId = null, [Query] int[] storageType = null, string materialNo = null, [Query] int[] isEnable = null);

        /// <summary>
        /// 手持端包装线跟踪数据
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetChainList")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetChainList(string key = null);

        /// <summary>
        /// 客户端查询钢卷
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetAllMaterials")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetAllMaterials(string materialNo = null);

        /// <summary>
        /// 手持机查询卷号
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetHoldAllMaterials")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetHoldAllMaterials(string materialNo = null);

        /// <summary>
        /// 查询库位
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetAllLocation")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetAllLocation(string locationName = null);

        /// <summary>
        /// WPF获取库位
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetLocationName")]
        Task<TTrLocationMaterialReadModel> GetLocationName(string locationName = null);

        /// <summary>
        /// 发送请求卷号信息
        /// </summary>
        /// <returns></returns>
        [Post("/tracker/TTrLocationMaterial/SendMaterialInfo")]
        Task<ItemResult<TTrLocationMaterialReadModel>> SendMaterialInfo(string materialNo = null);

        /// <summary>
        /// 获取行信息
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetAllAreaRows")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetAllAreaRows(string bayId = null, int? storeageType = null);

        /// <summary>
        /// 获取电瓶车钢卷信息
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetAllTrolleybusCoils")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetAllTrolleybusCoils(string bayName = null, int? storageType = null);

        /// <summary>
        /// 获取过跨车钢卷信息
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetAllCrossCarCoils")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetAllCrossCarCoils(string bayName = null, int? storageType = null);

        /// <summary>
        /// 获取汽车移库钢卷信息
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetAllTruckTransferCoils")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetAllTruckTransferCoils(string houseId = null);

        /// <summary>
        /// 更改吊运任务冻结状态
        /// </summary>
        /// <returns></returns>
        [Put("/tracker/TTrLocationMaterial/UpdateTaskState")]
        Task<int> UpdateTaskState(string bayId = null, string materialNo = null);

        /// <summary>
        /// 车载终端获取跨库位信息用于生成库位图
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetLocMatList")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetLocMatList(string bayId = null);

        /// <summary>
        /// 库位统计查询--1,以跨为单位
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetBayPercent")]
        Task<PageResult<LocationPercent>> GetBayPercent(int? current = null, int? pageSize = null);

        /// <summary>
        /// 库位统计查询--2,以垛为单位
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetStackPercent")]
        Task<PageResult<LocationPercent>> GetStackPercent(int? current = null, int? pageSize = null, [Query] string[] id = null);

        /// <summary>
        /// 当鞍座禁用时，更新stack启用状态
        /// </summary>
        /// <param name="cancellationToken"></param>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/UpdateStackIsEnable")]
        Task<OperationResult> UpdateStackIsEnable();

        /// <summary>
        /// 生成零点库存表
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/CreateLDMatReportExcel")]
        Task CreateLDMatReportExcel();

        /// <summary>
        /// 生成零点订单表
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/CreateLDOrderReportExcel")]
        Task CreateLDOrderReportExcel();

        /// <summary>
        /// 获取库位
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetListOfLocationRange")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetListOfLocationRange(string areaId = null, string stackId = null, string stackId2 = null, string colNo = null, string colNo2 = null, int? type = null, [Query] string[] locationNames = null);

        /// <summary>
        /// 获取同订单目标库位
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetListOfLocationRangeOrder")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetListOfLocationRangeOrder(string areaId = null, string stackId = null, string stackId2 = null, string colNo = null, string colNo2 = null, int? type = null, string loadLocationName = null);

        /// <summary>
        /// 查询该库位是否在库
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetLocationType2")]
        Task<bool> GetLocationType2(string locationName = null);

        /// <summary>
        /// 判断选择的目标库位，，是否能大压小
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetEndLocationYesBool")]
        Task<bool> GetEndLocationYesBool(string startlocationName = null, string endLocationName = null);

        /// <summary>
        /// 判断起始库位一层的上面是否有卷，是否允许吊
        /// </summary>
        [Get("/tracker/TTrLocationMaterial/GetStartFirstColNoSecondBool")]
        Task<bool> GetStartFirstColNoSecondBool(string locationName = null);

        /// <summary>
        /// 判断目标库位二层的下面是否有卷，是否允许放
        /// </summary>
        [Get("/tracker/TTrLocationMaterial/GetEndSecondColNoFirstBool")]
        Task<bool> GetEndSecondColNoFirstBool(string locationName = null);

        /// <summary>
        /// 查询在库鞍座
        /// </summary>
        [Get("/tracker/TTrLocationMaterial/GetLocationTypes")]
        Task<List<LocationStartEndRead>> GetLocationTypes(string bayId = null, string areaId = null, string startStackId = null, string endStackId = null, string startColNoId = null, string endColNoId = null, int? planCount = null);

        /// <summary>
        /// 库存对比
        /// </summary>
        /// <returns></returns>
        [Get("/tracker/TTrLocationMaterial/GetVcomparePageQuery")]
        Task<PageResult<VCompareNameNoReadModel>> GetVcomparePageQuery(int? current = null, int? pageSize = null, [Query] string[] bayIdWms = null, string type = null, string locationNameWms = null, string locationNameMes = null, string matNoWms = null, string matNoMes = null, [Query] string[] stockNoWms = null, [Query] string[] stockNoMes = null);

        [Post("/tracker/TTrLocationMaterial/Create")]
        Task<OperationResult> Create([Body] TTrLocationMaterialCreateModel createModel);

        [Put("/tracker/TTrLocationMaterial/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TTrLocationMaterialUpdateModel updateModel);

        [Delete("/tracker/TTrLocationMaterial/Delete")]
        Task<OperationResult> Delete([Query] string[] ids = null);

        [Get("/tracker/TTrLocationMaterial/Get/{id}")]
        Task<TTrLocationMaterialReadModel> Get(string id);

        [Get("/tracker/TTrLocationMaterial/GetPage")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/tracker/TTrLocationMaterial/GetPageByString")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/tracker/TTrLocationMaterial/GetListByString")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/tracker/TTrLocationMaterial/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/tracker/TTrLocationMaterial/GetList")]
        Task<PageResult<TTrLocationMaterialReadModel>> GetList();
    }
}