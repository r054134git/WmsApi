//<auto-generated />

using System;
using System.Threading.Tasks;
using Cds.Contracts;
using Refit;
using WmsApi;
using WmsApi.Contracts.Models;

namespace WmsApi.Tracker
{
    public partial interface ITTrCraneApi
    {
        [Get("/tracker/TTrCrane/GetCraneData")]
        Task<PageResult<TTrCraneReadModel>> GetCraneData(string bayId = null, string craneId = null);

        [Get("/tracker/TTrCrane/GetCraneDetail")]
        Task<TTrCraneReadModel> GetCraneDetail(string craneId = null);

        [Get("/tracker/TTrCrane/GetCranes")]
        Task<PageResult<TTrCraneReadModel>> GetCranes(string bayId = null);

        [Get("/tracker/TTrCrane/UpdateCraneRunning")]
        Task<OperationResult> UpdateCraneRunning(string craneName = null, int? mode = null, string user = null);

        [Get("/tracker/TTrCrane/UpdateCraneOpMode")]
        Task<OperationResult> UpdateCraneOpMode(string craneName = null, int? mode = null, string user = null);

        [Get("/tracker/TTrCrane/GetCraneCoilState")]
        Task<TTrLocationMaterialReadModel> GetCraneCoilState(string craneId = null, StackTypes? storeageType = null);

        [Put("/tracker/TTrCrane/Login")]
        Task<OperationResult<string>> Login(string craneName = null, string account = null, string password = null);

        [Put("/tracker/TTrCrane/Logout")]
        Task<bool> Logout(string craneName = null);

        [Post("/tracker/TTrCrane/SendOpModeCommand")]
        Task<string> SendOpModeCommand(string craneId = null, int? opModeValue = null);

        [Post("/tracker/TTrCrane/Create")]
        Task<OperationResult> Create([Body] TTrCraneCreateModel createModel);

        [Put("/tracker/TTrCrane/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TTrCraneUpdateModel updateModel);

        [Delete("/tracker/TTrCrane/Delete")]
        Task<OperationResult> Delete(string[] ids = null);

        [Get("/tracker/TTrCrane/Get/{id}")]
        Task<TTrCraneReadModel> Get(string id);

        [Get("/tracker/TTrCrane/GetPage")]
        Task<PageResult<TTrCraneReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/tracker/TTrCrane/GetPageByString")]
        Task<PageResult<TTrCraneReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/tracker/TTrCrane/GetListByString")]
        Task<PageResult<TTrCraneReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/tracker/TTrCrane/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/tracker/TTrCrane/GetList")]
        Task<PageResult<TTrCraneReadModel>> GetList();
    }
}