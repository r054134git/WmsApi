//<auto-generated />

using System.Threading.Tasks;
using Refit;
using WmsApi;
using WmsApi.Contracts.Models;

namespace WmsApi.Tracker
{
    public interface ITTrParkingPlaceApi
    {
        /// <summary>
        /// 更改车位道闸开关
        /// </summary>
        /// <returns></returns>
        [Put("/tracker/TTrParkingPlace/UpdateGateParking")]
        Task<int> UpdateGateParking(string name = null);

        /// <summary>
        /// 获取车位道闸
        /// </summary>
        /// <param name="cancellationToken"></param>
        /// <returns></returns>
        [Get("/tracker/TTrParkingPlace/GetGateParking")]
        Task<PageResult<TTrParkingPlaceReadModel>> GetGateParking();

        [Post("/tracker/TTrParkingPlace/Create")]
        Task<OperationResult> Create([Body] TTrParkingPlaceCreateModel createModel);

        [Put("/tracker/TTrParkingPlace/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TTrParkingPlaceUpdateModel updateModel);

        [Delete("/tracker/TTrParkingPlace/Delete")]
        Task<OperationResult> Delete([Query] string[] ids = null);

        [Get("/tracker/TTrParkingPlace/Get/{id}")]
        Task<TTrParkingPlaceReadModel> Get(string id);

        [Get("/tracker/TTrParkingPlace/GetPage")]
        Task<PageResult<TTrParkingPlaceReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/tracker/TTrParkingPlace/GetPageByString")]
        Task<PageResult<TTrParkingPlaceReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/tracker/TTrParkingPlace/GetListByString")]
        Task<PageResult<TTrParkingPlaceReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/tracker/TTrParkingPlace/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/tracker/TTrParkingPlace/GetList")]
        Task<PageResult<TTrParkingPlaceReadModel>> GetList();
    }
}