//<auto-generated />

using System.Threading.Tasks;
using Refit;
using WmsApi;
using WmsApi.Contracts.Models;

namespace WmsApi.Tracker
{
    public interface ITTrConveyingChainApi
    {
        [Post("/tracker/TTrConveyingChain/Create")]
        Task<OperationResult> Create([Body] TTrConveyingChainCreateModel createModel);

        [Put("/tracker/TTrConveyingChain/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TTrConveyingChainUpdateModel updateModel);

        [Delete("/tracker/TTrConveyingChain/Delete")]
        Task<OperationResult> Delete([Query] string[] ids = null);

        [Get("/tracker/TTrConveyingChain/Get/{id}")]
        Task<TTrConveyingChainReadModel> Get(string id);

        [Get("/tracker/TTrConveyingChain/GetPage")]
        Task<PageResult<TTrConveyingChainReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/tracker/TTrConveyingChain/GetPageByString")]
        Task<PageResult<TTrConveyingChainReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/tracker/TTrConveyingChain/GetListByString")]
        Task<PageResult<TTrConveyingChainReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/tracker/TTrConveyingChain/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/tracker/TTrConveyingChain/GetList")]
        Task<PageResult<TTrConveyingChainReadModel>> GetList();
    }
}