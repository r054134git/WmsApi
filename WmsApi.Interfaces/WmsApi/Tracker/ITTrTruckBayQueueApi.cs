//<auto-generated />

using System.Collections.Generic;
using System.Threading.Tasks;
using Refit;
using WmsApi;
using WmsApi.Contracts.Models;

namespace WmsApi.Tracker
{
    public partial interface ITTrTruckBayQueueApi
    {
        [Get("/tracker/TTrTruckBayQueue/GetPageByString")]
        Task<PageResult<TTrTruckBayQueueReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/tracker/TTrTruckBayQueue/GetPageByStringH")]
        Task<PageResult<TTrTruckBayQueueWithCountDto>> GetPageByStringH(int? current = null, int? pageSize = null, string where = null, string[] time = null, string orders = null);

        [Get("/tracker/TTrTruckBayQueue/GetLoadTruckList")]
        Task<List<VPlMaterialReadModel>> GetLoadTruckList(string truckNo = null, string mainLoadingNo = null, string bayCode = null);

        [Post("/tracker/TTrTruckBayQueue/Create")]
        Task<OperationResult> Create([Body] TTrTruckBayQueueCreateModel createModel);

        [Put("/tracker/TTrTruckBayQueue/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TTrTruckBayQueueUpdateModel updateModel);

        [Delete("/tracker/TTrTruckBayQueue/Delete")]
        Task<OperationResult> Delete(string[] ids = null);

        [Get("/tracker/TTrTruckBayQueue/Get/{id}")]
        Task<TTrTruckBayQueueReadModel> Get(string id);

        [Get("/tracker/TTrTruckBayQueue/GetPage")]
        Task<PageResult<TTrTruckBayQueueReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/tracker/TTrTruckBayQueue/GetListByString")]
        Task<PageResult<TTrTruckBayQueueReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/tracker/TTrTruckBayQueue/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/tracker/TTrTruckBayQueue/GetList")]
        Task<PageResult<TTrTruckBayQueueReadModel>> GetList();
    }
}