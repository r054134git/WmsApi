//<auto-generated />

using System.Threading.Tasks;
using Refit;
using WmsApi;
using WmsApi.Contracts;
using WmsApi.Contracts.Models;

namespace WmsApi.Store
{
    public partial interface ITWhLocationApi
    {
        [Get("/store/TWhLocation/GetListQuery")]
        Task<PageResult<TWhLocationReadModel>> GetListQuery(string[] bayId = null, string[] areaId = null, string[] ownerId = null);

        [Get("/store/TWhLocation/GetPageQuery")]
        Task<PageResult<TWhLocationReadModel>> GetPageQuery(int? current = null, int? pageSize = null, string[] bayId = null, string[] areaId = null, string[] ownerId = null, int[] floorNo = null, int[] orientation = null, int[] isVirtual = null, int[] storageType = null, int[] loadType = null, int[] isEnable = null);

        [Post("/store/TWhLocation/UpdateLocationDisabled")]
        Task<PageResult<TWhLocationReadModel>> UpdateLocationDisabled(string[] ids = null, string remark = null);

        [Post("/store/TWhLocation/UpdateLocationIsEnable")]
        Task<PageResult<TWhLocationReadModel>> UpdateLocationIsEnable(string[] ids = null, string remark = null);

        [Get("/store/TWhLocation/GetLocation")]
        Task<TWhLocationReadModel> GetLocation(string locationId = null);

        [Get("/store/TWhLocation/GetLocationByName")]
        Task<TWhLocationReadModel> GetLocationByName(string locationName = null);

        [Put("/store/TWhLocation/HoldUpdateLocation")]
        Task<OperationResult<TWhLocationReadModel>> HoldUpdateLocation(string locationId = null, decimal? pointX = null, decimal? pointY = null, int? isEnable = null);

        [Put("/store/TWhLocation/UpdateLocation")]
        Task<int> UpdateLocation([Body] TWhLocationReadModel location);

        [Post("/store/TWhLocation/BatchCreateLocations")]
        Task<bool> BatchCreateLocations([Body] BatchCreateLocationParam param);

        [Post("/store/TWhLocation/BatchUpdateLocationXY")]
        Task<bool> BatchUpdateLocationXY([Body] BatchAdjustXyParam param);

        [Post("/store/TWhLocation/BatchUpdateLocationSpacing")]
        Task<bool> BatchUpdateLocationSpacing([Body] BatchSpacingParam param);

        [Post("/store/TWhLocation/SendMesInfo")]
        Task<OperationResult> SendMesInfo([Body] TWhLocationCreateModel createModel);

        [Post("/store/TWhLocation/Create")]
        Task<OperationResult> Create([Body] TWhLocationCreateModel createModel);

        [Put("/store/TWhLocation/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TWhLocationUpdateModel updateModel);

        [Delete("/store/TWhLocation/Delete")]
        Task<OperationResult> Delete(string[] ids = null);

        [Post("/store/TWhLocation/UpdateLocationBuss")]
        Task<OperationResult> UpdateLocationBuss(string bayId = null, string areaId = null, string stackId = null, string buss = null);

        [Post("/store/TWhLocation/UpdateLocationStorageType")]
        Task<OperationResult> UpdateLocationStorageType(string bayId = null, string areaId = null, string stackId = null, int? storageType = null);

        [Get("/store/TWhLocation/GetListOfLocation")]
        Task<PageResult<TWhLocationReadModel>> GetListOfLocation(string stackId = null);

        [Post("/store/TWhLocation/UpdateLocationNameAndColNo")]
        Task<OperationResult> UpdateLocationNameAndColNo(string baycode = null, string areacode = null, int? addnum = null);

        [Get("/store/TWhLocation/Get/{id}")]
        Task<TWhLocationReadModel> Get(string id);

        [Get("/store/TWhLocation/GetPage")]
        Task<PageResult<TWhLocationReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/store/TWhLocation/GetPageByString")]
        Task<PageResult<TWhLocationReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/store/TWhLocation/GetListByString")]
        Task<PageResult<TWhLocationReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/store/TWhLocation/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/store/TWhLocation/GetList")]
        Task<PageResult<TWhLocationReadModel>> GetList();
    }
}