//<auto-generated />

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Refit;
using WmsApi;
using WmsApi.Contracts.Models;

namespace WmsApi.Plan
{
    public interface ITPlTruckTransferApi
    {
        /// <summary>
        /// 查询已经创建的移库单信息
        /// </summary>
        [Get("/plan/TPlTruckTransfer/GetAllTruckNos_old")]
        Task<PageResult<TPlTruckTransferReadModel>> GetAllTruckNos_old(int? current = null, int? pageSize = null);

        /// <summary>
        /// 查询已经创建的移库单信息
        /// </summary>
        [Get("/plan/TPlTruckTransfer/GetAllTruckNos")]
        Task<PageResult<TPlTruckTransferReadModel>> GetAllTruckNos(string where = null, string orders = null);

        /// <summary>
        /// 补全移库单
        /// </summary>
        [Post("/plan/TPlTruckTransfer/CompleTransfer")]
        Task<OperationResult> CompleTransfer([Body] TPlTruckTransferUpdateModel updateModel);

        /// <summary>
        /// 查询需要补全的移库车辆信息
        /// </summary>
        [Get("/plan/TPlTruckTransfer/GetTruckInfo")]
        Task<PageResult<TPlTruckTransferReadModel>> GetTruckInfo(string truckNo = null);

        /// <summary>
        /// 移库单 获取未挑库钢卷
        /// </summary>
        [Post("/plan/TPlTruckTransfer/GetAllUnpicked_old")]
        Task<OperationResult<PageResult<VPlMaterialReadModel>>> GetAllUnpicked_old(int? current = null, int? pageSize = null, string transferNo = null, string materialNo = null);

        /// <summary>
        /// 移库单 获取未挑库钢卷
        /// </summary>
        [Post("/plan/TPlTruckTransfer/GetAllUnpicked")]
        Task<OperationResult<PageResult<VPlMaterialReadModel>>> GetAllUnpicked(int? current = null, int? pageSize = null, string transferNo = null, string materialNo = null, string where = null, string orders = null);

        /// <summary>
        /// 根据移库单获取 已挑库的钢卷
        /// </summary>
        [Post("/plan/TPlTruckTransfer/GetAllPicked_old")]
        Task<PageResult<VPlMaterialReadModel>> GetAllPicked_old(string transferNo = null);

        /// <summary>
        /// 根据移库单获取 已挑库的钢卷
        /// </summary>
        [Post("/plan/TPlTruckTransfer/GetAllPicked")]
        Task<PageResult<VPlMaterialReadModel>> GetAllPicked(string transferNo = null, string where = null, string orders = null);

        /// <summary>
        /// 移库预挑库
        /// </summary>
        [Post("/plan/TPlTruckTransfer/Pick")]
        Task<OperationResult> Pick(string transferNo = null, string materialNo = null);

        /// <summary>
        /// 移库预挑库取消
        /// </summary>
        [Post("/plan/TPlTruckTransfer/Unpick")]
        Task<OperationResult> Unpick(string transferNo = null, string materialNo = null, [Query] string[] materialNos = null);

        /// <summary>
        /// 移库预挑库 下发
        /// </summary>
        [Post("/plan/TPlTruckTransfer/Confirm")]
        Task<OperationResult> Confirm(string transferNo = null);

        /// <summary>
        /// 移库单取消/作废
        /// </summary>
        [Post("/plan/TPlTruckTransfer/Cancel")]
        Task<OperationResult> Cancel(string transferNo = null);

        /// <summary>
        /// 移库单删除
        /// </summary>
        [Post("/plan/TPlTruckTransfer/DeleteTransfer")]
        Task<OperationResult> DeleteTransfer(string transferNo = null);

        /// <summary>
        /// 下载已挑库钢卷模板
        /// </summary>
        /// <returns></returns>
        [Get("/plan/TPlTruckTransfer/ImportPickModel")]
        Task ImportPickModel();

        /// <summary>
        /// 导入已挑库钢卷信息
        /// </summary>
        /// <returns></returns>
        [Multipart]
        [Post("/plan/TPlTruckTransfer/ImportPickData")]
        Task<OperationResult> ImportPickData(MultipartItem file, string transferNo = null);

        /// <summary>
        /// 获取当前库内外贸水汽可配载数量
        /// </summary>
        [Post("/plan/TPlTruckTransfer/GetPickTypeNum")]
        Task<OperationResult<List<int>>> GetPickTypeNum([Query] string[] bayCodes = null, string transferNo = null);

        /// <summary>
        /// 获取当前库内外贸水汽包装线可配载数量
        /// </summary>
        [Post("/plan/TPlTruckTransfer/GetPickTypeLineNum")]
        Task<OperationResult<List<int>>> GetPickTypeLineNum([Query] string[] bayCodes = null, string transferNo = null);

        /// <summary>
        /// 自动预挑库
        /// </summary>
        [Post("/plan/TPlTruckTransfer/AutoTransferPickDirect")]
        Task<OperationResult> AutoTransferPickDirect([Query] int?[] pickTypes = null, [Query] string[] bayCodes = null, string transferNo = null, int? isDirectTruck = null);

        [Post("/plan/TPlTruckTransfer/Create")]
        Task<OperationResult> Create([Body] TPlTruckTransferCreateModel createModel);

        [Put("/plan/TPlTruckTransfer/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TPlTruckTransferUpdateModel updateModel);

        [Delete("/plan/TPlTruckTransfer/Delete")]
        Task<OperationResult> Delete([Query] string[] ids = null);

        [Get("/plan/TPlTruckTransfer/Get/{id}")]
        Task<TPlTruckTransferReadModel> Get(string id);

        [Get("/plan/TPlTruckTransfer/GetPage")]
        Task<PageResult<TPlTruckTransferReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/plan/TPlTruckTransfer/GetPageByString")]
        Task<PageResult<TPlTruckTransferReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/plan/TPlTruckTransfer/GetListByString")]
        Task<PageResult<TPlTruckTransferReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/plan/TPlTruckTransfer/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/plan/TPlTruckTransfer/GetList")]
        Task<PageResult<TPlTruckTransferReadModel>> GetList();
    }
}