//<auto-generated />

using System.Threading.Tasks;
using Refit;
using WmsApi;
using WmsApi.Contracts.Models;

namespace WmsApi.Plan
{
    public partial interface ITPlCraneTaskApi
    {
        [Get("/plan/TPlCraneTask/GetAllTaskList")]
        Task<PageResult<TPlCraneTaskReadModel>> GetAllTaskList(string bayId = null, string craneId = null);

        [Put("/plan/TPlCraneTask/UpdateTaskState")]
        Task<int> UpdateTaskState(string bayId = null, string materialNo = null);

        [Put("/plan/TPlCraneTask/UpdateTaskFrozon")]
        Task<OperationResult> UpdateTaskFrozon(string id = null, bool? frozon = null);

        [Put("/plan/TPlCraneTask/UpdateUserCraneId")]
        Task<OperationResult> UpdateUserCraneId(string id = null, string craneId = null);

        [Post("/plan/TPlCraneTask/Create")]
        Task<OperationResult> Create([Body] TPlCraneTaskCreateModel createModel);

        [Put("/plan/TPlCraneTask/Update/{id}")]
        Task<OperationResult> Update(string id, [Body] TPlCraneTaskUpdateModel updateModel);

        [Delete("/plan/TPlCraneTask/Delete")]
        Task<OperationResult> Delete(string[] ids = null);

        [Get("/plan/TPlCraneTask/Get/{id}")]
        Task<TPlCraneTaskReadModel> Get(string id);

        [Get("/plan/TPlCraneTask/GetPage")]
        Task<PageResult<TPlCraneTaskReadModel>> GetPage(int? current = null, int? pageSize = null);

        [Get("/plan/TPlCraneTask/GetPageByString")]
        Task<PageResult<TPlCraneTaskReadModel>> GetPageByString(int? current = null, int? pageSize = null, string where = null, string orders = null);

        [Get("/plan/TPlCraneTask/GetListByString")]
        Task<PageResult<TPlCraneTaskReadModel>> GetListByString(string where = null, string orders = null);

        [Get("/plan/TPlCraneTask/CreateReportExcel")]
        Task CreateReportExcel(string where = null, string orders = null, string reportName = null);

        [Get("/plan/TPlCraneTask/GetList")]
        Task<PageResult<TPlCraneTaskReadModel>> GetList();
    }
}